%{
#include<stdio.h>
#include<bits/stdc++.h>

using namespace std;
int yylex(void);
void yyerror(char *s);
extern int yylineno;
#define YYDEBUG 1
%}

//this is for yylval
%union{
    int integer;
    float real;
}

//tokens and their types
%token <integer> INT
%token <real> FLOAT

//non-terminal and their type
%type <real> exp

%left '-' '+'
%left '*' '/'
%left UNEG UPOS

%start s        //start symbol

//grammar rules and corresponding actions
%%
s:      s line | ;
line:   '\n'
        | exp '\n'  {printf("%f",$1);}
        | error '\n'    {yyerrok ;}
        ;

exp:    INT             {$$=(float)$1;}
        | FLOAT         {$$=$1;}
        | exp '+' exp   {$$=$1+$3;}
        | exp '-' exp   {$$=$1-$3;}
        | exp '*' exp   {$$=$1*$3;}
        | exp '/' exp   {
                            if($3==0) yyerror("Divide by zero");
                            else $$=$1/$3;
                        }
        ;

%%

int main(){
    //yydebug = YYDEBUG;
    return yyparse();
}

void yyerror(char *s){
    printf("Error at line no. %d",yylineno);
    printf("%s",*s);
}


